
.. _dataframe-slicing:

数据切片
========


实际中，我们常常不是分析整个数据，而是数据中的部分子集。如何根据特定的条件获得所需要的数据是本节的主要内容。


主要方法
~~~~~~~~

对 ``DataFrame`` 选择行和列，主要有几种方式：

-  使用 ``[]`` 选择
-  使用 ``.iloc`` 或者 ``.loc`` 函数
-  使用 ``.query`` 函数

使用 [] 进行选择
~~~~~~~~~~~~~~~~

选择第 2 行到第 5 行（不包括第 5 行）的数据：

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df[2:5]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>isocode</th>
          <th>year</th>
          <th>POP</th>
          <th>XRAT</th>
          <th>Currency_Unit</th>
          <th>ppp</th>
          <th>tcgdp</th>
          <th>cgdp</th>
          <th>cgdp2</th>
          <th>...</th>
          <th>kg</th>
          <th>ki</th>
          <th>openk</th>
          <th>rgdpeqa</th>
          <th>rgdpwok</th>
          <th>rgdpl2wok</th>
          <th>rgdpl2pe</th>
          <th>rgdpl2te</th>
          <th>rgdpl2th</th>
          <th>rgdptt</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1952</td>
          <td>8425.333</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>3</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1953</td>
          <td>8573.217</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>4</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1954</td>
          <td>8728.408</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>...</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    <p>3 rows × 37 columns</p>
    </div>



要选择列，我们可以传递一个列表，其中包含所需列的列名，为字符串形式。

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df[['country', 'tcgdp']]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>tcgdp</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>Afghanistan</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>1</th>
          <td>Afghanistan</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2</th>
          <td>Afghanistan</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>3</th>
          <td>Afghanistan</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>4</th>
          <td>Afghanistan</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>11395</th>
          <td>Zimbabwe</td>
          <td>1968.205961</td>
        </tr>
        <tr>
          <th>11396</th>
          <td>Zimbabwe</td>
          <td>2132.305773</td>
        </tr>
        <tr>
          <th>11397</th>
          <td>Zimbabwe</td>
          <td>2107.937100</td>
        </tr>
        <tr>
          <th>11398</th>
          <td>Zimbabwe</td>
          <td>1772.209867</td>
        </tr>
        <tr>
          <th>11399</th>
          <td>Zimbabwe</td>
          <td>1906.049843</td>
        </tr>
      </tbody>
    </table>
    <p>11400 rows × 2 columns</p>
    </div>



如果只选取一列，\ ``df['country']`` 等价于 ``df.country``\ 。

``[]`` 还可以用来选择符合特定条件的数据。 例如，选取 POP 大于 20000
的行。判断语句 ``df.POP> 20000`` 会返回一系列布尔值，符合 POP 大于 20000
条件的会返回为 ``True``\ 。如果想要选择这些符合条件的数据，则需要：

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df[df.POP>= 20000]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>isocode</th>
          <th>year</th>
          <th>POP</th>
          <th>XRAT</th>
          <th>Currency_Unit</th>
          <th>ppp</th>
          <th>tcgdp</th>
          <th>cgdp</th>
          <th>cgdp2</th>
          <th>...</th>
          <th>kg</th>
          <th>ki</th>
          <th>openk</th>
          <th>rgdpeqa</th>
          <th>rgdpwok</th>
          <th>rgdpl2wok</th>
          <th>rgdpl2pe</th>
          <th>rgdpl2te</th>
          <th>rgdpl2th</th>
          <th>rgdptt</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>45</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1995</td>
          <td>20881.480</td>
          <td>0.833333</td>
          <td>Afghani</td>
          <td>0.352981</td>
          <td>7640.404208</td>
          <td>365.893807</td>
          <td>380.608406</td>
          <td>...</td>
          <td>11.969276</td>
          <td>11.435963</td>
          <td>64.779503</td>
          <td>575.749694</td>
          <td>1427.160971</td>
          <td>1432.074990</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>450.097562</td>
        </tr>
        <tr>
          <th>46</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1996</td>
          <td>21559.923</td>
          <td>2.500023</td>
          <td>Afghani</td>
          <td>1.035618</td>
          <td>7541.782643</td>
          <td>349.805639</td>
          <td>363.579817</td>
          <td>...</td>
          <td>12.403287</td>
          <td>11.368530</td>
          <td>72.681765</td>
          <td>539.935370</td>
          <td>1339.773062</td>
          <td>1343.634290</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>422.025786</td>
        </tr>
        <tr>
          <th>47</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1997</td>
          <td>22227.415</td>
          <td>3.000030</td>
          <td>Afghani</td>
          <td>1.230919</td>
          <td>7420.757993</td>
          <td>333.856096</td>
          <td>342.188209</td>
          <td>...</td>
          <td>2.098612</td>
          <td>22.681018</td>
          <td>57.214244</td>
          <td>569.246414</td>
          <td>1414.179670</td>
          <td>1508.635000</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>388.407429</td>
        </tr>
        <tr>
          <th>48</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1998</td>
          <td>22912.814</td>
          <td>3.000053</td>
          <td>Afghani</td>
          <td>1.225851</td>
          <td>7203.038357</td>
          <td>314.367251</td>
          <td>321.797566</td>
          <td>...</td>
          <td>2.155247</td>
          <td>22.589964</td>
          <td>62.186846</td>
          <td>539.258652</td>
          <td>1340.627874</td>
          <td>1430.919956</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>363.011141</td>
        </tr>
        <tr>
          <th>49</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1999</td>
          <td>23646.128</td>
          <td>45.106375</td>
          <td>Afghani</td>
          <td>18.193448</td>
          <td>7053.728453</td>
          <td>298.303741</td>
          <td>305.275708</td>
          <td>...</td>
          <td>2.169332</td>
          <td>22.483448</td>
          <td>67.001174</td>
          <td>510.554309</td>
          <td>1270.043559</td>
          <td>1356.481758</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>339.159330</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>11275</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2005</td>
          <td>20345.000</td>
          <td>195.080000</td>
          <td>Yemeni Rial</td>
          <td>69.501112</td>
          <td>49247.125610</td>
          <td>2420.600915</td>
          <td>2445.644456</td>
          <td>...</td>
          <td>6.630541</td>
          <td>30.908319</td>
          <td>70.762075</td>
          <td>3152.987812</td>
          <td>9689.452913</td>
          <td>9689.452913</td>
          <td>NaN</td>
          <td>9376.655609</td>
          <td>NaN</td>
          <td>2420.600915</td>
        </tr>
        <tr>
          <th>11276</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2006</td>
          <td>20965.000</td>
          <td>198.500000</td>
          <td>Yemeni Rial</td>
          <td>79.718914</td>
          <td>51669.180970</td>
          <td>2464.544764</td>
          <td>2509.971963</td>
          <td>...</td>
          <td>7.627067</td>
          <td>28.001314</td>
          <td>77.513306</td>
          <td>3098.297843</td>
          <td>9398.235529</td>
          <td>9540.051028</td>
          <td>NaN</td>
          <td>9243.472310</td>
          <td>NaN</td>
          <td>2382.182154</td>
        </tr>
        <tr>
          <th>11277</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2007</td>
          <td>21591.000</td>
          <td>199.540000</td>
          <td>Yemeni Rial</td>
          <td>84.656475</td>
          <td>55761.428540</td>
          <td>2582.623711</td>
          <td>2607.372597</td>
          <td>...</td>
          <td>8.616352</td>
          <td>29.295411</td>
          <td>74.538105</td>
          <td>3149.613533</td>
          <td>9432.763102</td>
          <td>9606.653374</td>
          <td>NaN</td>
          <td>9314.041767</td>
          <td>NaN</td>
          <td>2417.153583</td>
        </tr>
        <tr>
          <th>11278</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2008</td>
          <td>22223.000</td>
          <td>200.080000</td>
          <td>Yemeni Rial</td>
          <td>95.889955</td>
          <td>59804.720830</td>
          <td>2691.118248</td>
          <td>2708.301212</td>
          <td>...</td>
          <td>7.578654</td>
          <td>26.635831</td>
          <td>77.739227</td>
          <td>3154.238236</td>
          <td>9329.826256</td>
          <td>9586.031067</td>
          <td>NaN</td>
          <td>9295.538992</td>
          <td>NaN</td>
          <td>2437.614583</td>
        </tr>
        <tr>
          <th>11279</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2009</td>
          <td>22858.000</td>
          <td>207.320000</td>
          <td>Yemeni Rial</td>
          <td>87.617700</td>
          <td>61288.814890</td>
          <td>2681.285103</td>
          <td>2699.266570</td>
          <td>...</td>
          <td>8.432549</td>
          <td>23.873591</td>
          <td>66.853623</td>
          <td>3116.525801</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>9276.310000</td>
          <td>NaN</td>
          <td>2415.879535</td>
        </tr>
      </tbody>
    </table>
    <p>2223 rows × 37 columns</p>
    </div>



如果选择 cc 列和 cg 列的和大于 80 并且 POP 小于 20000 的行：

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df[(df.cc + df.cg>= 80) & (df.POP <= 20000)]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>isocode</th>
          <th>year</th>
          <th>POP</th>
          <th>XRAT</th>
          <th>Currency_Unit</th>
          <th>ppp</th>
          <th>tcgdp</th>
          <th>cgdp</th>
          <th>cgdp2</th>
          <th>...</th>
          <th>kg</th>
          <th>ki</th>
          <th>openk</th>
          <th>rgdpeqa</th>
          <th>rgdpwok</th>
          <th>rgdpl2wok</th>
          <th>rgdpl2pe</th>
          <th>rgdpl2te</th>
          <th>rgdpl2th</th>
          <th>rgdptt</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>20</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1970</td>
          <td>12430.623</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.030932</td>
          <td>2544.158761</td>
          <td>204.668645</td>
          <td>217.070672</td>
          <td>...</td>
          <td>6.874972</td>
          <td>7.282942</td>
          <td>11.400791</td>
          <td>1081.424221</td>
          <td>2573.757504</td>
          <td>2628.306751</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>855.028440</td>
        </tr>
        <tr>
          <th>21</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1971</td>
          <td>12749.385</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.029717</td>
          <td>2772.708160</td>
          <td>217.477797</td>
          <td>233.174215</td>
          <td>...</td>
          <td>7.391439</td>
          <td>8.136900</td>
          <td>16.542793</td>
          <td>1107.678841</td>
          <td>2638.926007</td>
          <td>2690.518366</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>864.055243</td>
        </tr>
        <tr>
          <th>22</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1972</td>
          <td>13079.460</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.028351</td>
          <td>2532.448551</td>
          <td>193.620268</td>
          <td>203.815514</td>
          <td>...</td>
          <td>7.894959</td>
          <td>7.223611</td>
          <td>17.784399</td>
          <td>945.298951</td>
          <td>2254.372064</td>
          <td>2287.650884</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>737.915549</td>
        </tr>
        <tr>
          <th>23</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1973</td>
          <td>13421.301</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.026877</td>
          <td>2901.972071</td>
          <td>216.221369</td>
          <td>225.405444</td>
          <td>...</td>
          <td>7.451048</td>
          <td>6.500619</td>
          <td>18.505092</td>
          <td>999.400460</td>
          <td>2385.834304</td>
          <td>2424.683471</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>779.620585</td>
        </tr>
        <tr>
          <th>24</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1974</td>
          <td>13772.076</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.028327</td>
          <td>3424.228187</td>
          <td>248.635586</td>
          <td>257.753750</td>
          <td>...</td>
          <td>7.098609</td>
          <td>7.785019</td>
          <td>24.503937</td>
          <td>1025.208685</td>
          <td>2449.957675</td>
          <td>2497.585718</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>812.015225</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>11395</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2005</td>
          <td>11639.470</td>
          <td>2.236364e+01</td>
          <td>Zimbabwe Dollar</td>
          <td>39.482829</td>
          <td>1968.205961</td>
          <td>169.097559</td>
          <td>184.183929</td>
          <td>...</td>
          <td>6.995770</td>
          <td>9.376272</td>
          <td>89.399427</td>
          <td>214.739197</td>
          <td>418.970867</td>
          <td>418.970867</td>
          <td>NaN</td>
          <td>390.907086</td>
          <td>NaN</td>
          <td>169.097559</td>
        </tr>
        <tr>
          <th>11396</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2006</td>
          <td>11544.326</td>
          <td>1.643606e+02</td>
          <td>Zimbabwe Dollar</td>
          <td>384.899651</td>
          <td>2132.305773</td>
          <td>184.705956</td>
          <td>192.953943</td>
          <td>...</td>
          <td>7.648020</td>
          <td>14.986823</td>
          <td>81.697014</td>
          <td>217.543648</td>
          <td>424.754259</td>
          <td>407.262097</td>
          <td>NaN</td>
          <td>377.352394</td>
          <td>NaN</td>
          <td>179.368685</td>
        </tr>
        <tr>
          <th>11397</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2007</td>
          <td>11443.187</td>
          <td>9.675781e+03</td>
          <td>Zimbabwe Dollar</td>
          <td>38583.323960</td>
          <td>2107.937100</td>
          <td>184.208918</td>
          <td>198.215361</td>
          <td>...</td>
          <td>8.387106</td>
          <td>15.787322</td>
          <td>84.483374</td>
          <td>202.707080</td>
          <td>396.486201</td>
          <td>376.163064</td>
          <td>NaN</td>
          <td>345.764991</td>
          <td>NaN</td>
          <td>173.113448</td>
        </tr>
        <tr>
          <th>11398</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2008</td>
          <td>11350.000</td>
          <td>6.715424e+09</td>
          <td>Zimbabwe Dollar</td>
          <td>38723.957740</td>
          <td>1772.209867</td>
          <td>156.141839</td>
          <td>162.112294</td>
          <td>...</td>
          <td>7.685312</td>
          <td>13.444449</td>
          <td>85.117130</td>
          <td>174.178806</td>
          <td>343.159758</td>
          <td>332.649861</td>
          <td>NaN</td>
          <td>302.945712</td>
          <td>NaN</td>
          <td>142.329054</td>
        </tr>
        <tr>
          <th>11399</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2009</td>
          <td>11383.000</td>
          <td>1.400000e+17</td>
          <td>Zimbabwe Dollar</td>
          <td>40289.958990</td>
          <td>1906.049843</td>
          <td>167.447056</td>
          <td>174.419700</td>
          <td>...</td>
          <td>7.905525</td>
          <td>14.743667</td>
          <td>83.749534</td>
          <td>182.613004</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>314.171069</td>
          <td>NaN</td>
          <td>151.435285</td>
        </tr>
      </tbody>
    </table>
    <p>3827 rows × 37 columns</p>
    </div>



iloc 或者 loc
~~~~~~~~~~~~~

使用 ``iloc`` 函数进行选择，形式应为 ``.iloc[rows, columns]``\ 。

可以将 i 理解为 integer，即 i 是整数，表示行或者列位置（位置由被称为
index），\ ``iloc`` 即用整数来选择行或者选择列。i 从 0 开始，至
``length-1``\ 。

例如：选择第 2 行到第 5 行（不包括第 5 行），第 0 列到第 4 列（不包括第
4 列）。

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df.iloc[2:5, 0:4]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>isocode</th>
          <th>year</th>
          <th>POP</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1952</td>
          <td>8425.333</td>
        </tr>
        <tr>
          <th>3</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1953</td>
          <td>8573.217</td>
        </tr>
        <tr>
          <th>4</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1954</td>
          <td>8728.408</td>
        </tr>
      </tbody>
    </table>
    </div>



使用 ``loc`` 函数进行选择，与 ``iloc`` 的区别在于，\ ``loc``
除了接受整数外，还可以接受标签（\ ``a``\ 、\ ``b``
这样的列名）、表示整数位置的 index、\ ``boolean`` 。

选择第 2 行到第 5 行（不包括第 5 行），\ ``country`` 和 ``tcgdp`` 列：

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df.loc[df.index[2:5], ['country', 'tcgdp']]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>tcgdp</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2</th>
          <td>Afghanistan</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>3</th>
          <td>Afghanistan</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>4</th>
          <td>Afghanistan</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    </div>



使用 ``loc`` 函数选择 POP 列最大值的行：

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df.loc[df.POP == max(df.POP)]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>isocode</th>
          <th>year</th>
          <th>POP</th>
          <th>XRAT</th>
          <th>Currency_Unit</th>
          <th>ppp</th>
          <th>tcgdp</th>
          <th>cgdp</th>
          <th>cgdp2</th>
          <th>...</th>
          <th>kg</th>
          <th>ki</th>
          <th>openk</th>
          <th>rgdpeqa</th>
          <th>rgdpwok</th>
          <th>rgdpl2wok</th>
          <th>rgdpl2pe</th>
          <th>rgdpl2te</th>
          <th>rgdpl2th</th>
          <th>rgdptt</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2159</th>
          <td>China Version 1</td>
          <td>CHN</td>
          <td>2009</td>
          <td>1323592.0</td>
          <td>6.83</td>
          <td>Yuan Renminbi</td>
          <td>3.342447</td>
          <td>10739325.58</td>
          <td>8113.773410</td>
          <td>8296.575690</td>
          <td>...</td>
          <td>15.779553</td>
          <td>46.707842</td>
          <td>58.579480</td>
          <td>7782.385295</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>11914.32395</td>
          <td>NaN</td>
          <td>7314.930606</td>
        </tr>
        <tr>
          <th>2219</th>
          <td>China Version 2</td>
          <td>CH2</td>
          <td>2009</td>
          <td>1323592.0</td>
          <td>6.83</td>
          <td>Yuan Renminbi</td>
          <td>3.164712</td>
          <td>11342464.26</td>
          <td>8569.456643</td>
          <td>9227.187296</td>
          <td>...</td>
          <td>15.655224</td>
          <td>39.044203</td>
          <td>61.240342</td>
          <td>8247.646160</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>12658.65025</td>
          <td>NaN</td>
          <td>7747.331618</td>
        </tr>
      </tbody>
    </table>
    <p>2 rows × 37 columns</p>
    </div>



还可以使用这种形式：\ ``.loc[,]``\ ，两个参数用逗号隔开，第一个参数接受条件，第二个参数接受我们想要返回的列名，得到的是符合条件的特定的列。

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df.loc[(df.cc + df.cg>= 80) & (df.POP <= 20000), ['country', 'year', 'POP']]




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>year</th>
          <th>POP</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>20</th>
          <td>Afghanistan</td>
          <td>1970</td>
          <td>12430.623</td>
        </tr>
        <tr>
          <th>21</th>
          <td>Afghanistan</td>
          <td>1971</td>
          <td>12749.385</td>
        </tr>
        <tr>
          <th>22</th>
          <td>Afghanistan</td>
          <td>1972</td>
          <td>13079.460</td>
        </tr>
        <tr>
          <th>23</th>
          <td>Afghanistan</td>
          <td>1973</td>
          <td>13421.301</td>
        </tr>
        <tr>
          <th>24</th>
          <td>Afghanistan</td>
          <td>1974</td>
          <td>13772.076</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>11395</th>
          <td>Zimbabwe</td>
          <td>2005</td>
          <td>11639.470</td>
        </tr>
        <tr>
          <th>11396</th>
          <td>Zimbabwe</td>
          <td>2006</td>
          <td>11544.326</td>
        </tr>
        <tr>
          <th>11397</th>
          <td>Zimbabwe</td>
          <td>2007</td>
          <td>11443.187</td>
        </tr>
        <tr>
          <th>11398</th>
          <td>Zimbabwe</td>
          <td>2008</td>
          <td>11350.000</td>
        </tr>
        <tr>
          <th>11399</th>
          <td>Zimbabwe</td>
          <td>2009</td>
          <td>11383.000</td>
        </tr>
      </tbody>
    </table>
    <p>3827 rows × 3 columns</p>
    </div>



由于 ``iloc`` 函数只接受整数，所以不允许使用这种条件进行筛选。

query
~~~~~

``.query()`` 函数的用法与 ``[]``
有相似之处。值得注意的是，\ ``.query()``
函数的性能更好，在处理大规模数据时更快。

.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df.query("POP>= 20000")




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>isocode</th>
          <th>year</th>
          <th>POP</th>
          <th>XRAT</th>
          <th>Currency_Unit</th>
          <th>ppp</th>
          <th>tcgdp</th>
          <th>cgdp</th>
          <th>cgdp2</th>
          <th>...</th>
          <th>kg</th>
          <th>ki</th>
          <th>openk</th>
          <th>rgdpeqa</th>
          <th>rgdpwok</th>
          <th>rgdpl2wok</th>
          <th>rgdpl2pe</th>
          <th>rgdpl2te</th>
          <th>rgdpl2th</th>
          <th>rgdptt</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>45</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1995</td>
          <td>20881.480</td>
          <td>0.833333</td>
          <td>Afghani</td>
          <td>0.352981</td>
          <td>7640.404208</td>
          <td>365.893807</td>
          <td>380.608406</td>
          <td>...</td>
          <td>11.969276</td>
          <td>11.435963</td>
          <td>64.779503</td>
          <td>575.749694</td>
          <td>1427.160971</td>
          <td>1432.074990</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>450.097562</td>
        </tr>
        <tr>
          <th>46</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1996</td>
          <td>21559.923</td>
          <td>2.500023</td>
          <td>Afghani</td>
          <td>1.035618</td>
          <td>7541.782643</td>
          <td>349.805639</td>
          <td>363.579817</td>
          <td>...</td>
          <td>12.403287</td>
          <td>11.368530</td>
          <td>72.681765</td>
          <td>539.935370</td>
          <td>1339.773062</td>
          <td>1343.634290</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>422.025786</td>
        </tr>
        <tr>
          <th>47</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1997</td>
          <td>22227.415</td>
          <td>3.000030</td>
          <td>Afghani</td>
          <td>1.230919</td>
          <td>7420.757993</td>
          <td>333.856096</td>
          <td>342.188209</td>
          <td>...</td>
          <td>2.098612</td>
          <td>22.681018</td>
          <td>57.214244</td>
          <td>569.246414</td>
          <td>1414.179670</td>
          <td>1508.635000</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>388.407429</td>
        </tr>
        <tr>
          <th>48</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1998</td>
          <td>22912.814</td>
          <td>3.000053</td>
          <td>Afghani</td>
          <td>1.225851</td>
          <td>7203.038357</td>
          <td>314.367251</td>
          <td>321.797566</td>
          <td>...</td>
          <td>2.155247</td>
          <td>22.589964</td>
          <td>62.186846</td>
          <td>539.258652</td>
          <td>1340.627874</td>
          <td>1430.919956</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>363.011141</td>
        </tr>
        <tr>
          <th>49</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1999</td>
          <td>23646.128</td>
          <td>45.106375</td>
          <td>Afghani</td>
          <td>18.193448</td>
          <td>7053.728453</td>
          <td>298.303741</td>
          <td>305.275708</td>
          <td>...</td>
          <td>2.169332</td>
          <td>22.483448</td>
          <td>67.001174</td>
          <td>510.554309</td>
          <td>1270.043559</td>
          <td>1356.481758</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>339.159330</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>11275</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2005</td>
          <td>20345.000</td>
          <td>195.080000</td>
          <td>Yemeni Rial</td>
          <td>69.501112</td>
          <td>49247.125610</td>
          <td>2420.600915</td>
          <td>2445.644456</td>
          <td>...</td>
          <td>6.630541</td>
          <td>30.908319</td>
          <td>70.762075</td>
          <td>3152.987812</td>
          <td>9689.452913</td>
          <td>9689.452913</td>
          <td>NaN</td>
          <td>9376.655609</td>
          <td>NaN</td>
          <td>2420.600915</td>
        </tr>
        <tr>
          <th>11276</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2006</td>
          <td>20965.000</td>
          <td>198.500000</td>
          <td>Yemeni Rial</td>
          <td>79.718914</td>
          <td>51669.180970</td>
          <td>2464.544764</td>
          <td>2509.971963</td>
          <td>...</td>
          <td>7.627067</td>
          <td>28.001314</td>
          <td>77.513306</td>
          <td>3098.297843</td>
          <td>9398.235529</td>
          <td>9540.051028</td>
          <td>NaN</td>
          <td>9243.472310</td>
          <td>NaN</td>
          <td>2382.182154</td>
        </tr>
        <tr>
          <th>11277</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2007</td>
          <td>21591.000</td>
          <td>199.540000</td>
          <td>Yemeni Rial</td>
          <td>84.656475</td>
          <td>55761.428540</td>
          <td>2582.623711</td>
          <td>2607.372597</td>
          <td>...</td>
          <td>8.616352</td>
          <td>29.295411</td>
          <td>74.538105</td>
          <td>3149.613533</td>
          <td>9432.763102</td>
          <td>9606.653374</td>
          <td>NaN</td>
          <td>9314.041767</td>
          <td>NaN</td>
          <td>2417.153583</td>
        </tr>
        <tr>
          <th>11278</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2008</td>
          <td>22223.000</td>
          <td>200.080000</td>
          <td>Yemeni Rial</td>
          <td>95.889955</td>
          <td>59804.720830</td>
          <td>2691.118248</td>
          <td>2708.301212</td>
          <td>...</td>
          <td>7.578654</td>
          <td>26.635831</td>
          <td>77.739227</td>
          <td>3154.238236</td>
          <td>9329.826256</td>
          <td>9586.031067</td>
          <td>NaN</td>
          <td>9295.538992</td>
          <td>NaN</td>
          <td>2437.614583</td>
        </tr>
        <tr>
          <th>11279</th>
          <td>Yemen</td>
          <td>YEM</td>
          <td>2009</td>
          <td>22858.000</td>
          <td>207.320000</td>
          <td>Yemeni Rial</td>
          <td>87.617700</td>
          <td>61288.814890</td>
          <td>2681.285103</td>
          <td>2699.266570</td>
          <td>...</td>
          <td>8.432549</td>
          <td>23.873591</td>
          <td>66.853623</td>
          <td>3116.525801</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>9276.310000</td>
          <td>NaN</td>
          <td>2415.879535</td>
        </tr>
      </tbody>
    </table>
    <p>2223 rows × 37 columns</p>
    </div>



.. raw:: latex

   \diilbookstyleinputcell

.. code:: python

    df.query("cc + cg>= 80 & POP <= 20000")




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>country</th>
          <th>isocode</th>
          <th>year</th>
          <th>POP</th>
          <th>XRAT</th>
          <th>Currency_Unit</th>
          <th>ppp</th>
          <th>tcgdp</th>
          <th>cgdp</th>
          <th>cgdp2</th>
          <th>...</th>
          <th>kg</th>
          <th>ki</th>
          <th>openk</th>
          <th>rgdpeqa</th>
          <th>rgdpwok</th>
          <th>rgdpl2wok</th>
          <th>rgdpl2pe</th>
          <th>rgdpl2te</th>
          <th>rgdpl2th</th>
          <th>rgdptt</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>20</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1970</td>
          <td>12430.623</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.030932</td>
          <td>2544.158761</td>
          <td>204.668645</td>
          <td>217.070672</td>
          <td>...</td>
          <td>6.874972</td>
          <td>7.282942</td>
          <td>11.400791</td>
          <td>1081.424221</td>
          <td>2573.757504</td>
          <td>2628.306751</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>855.028440</td>
        </tr>
        <tr>
          <th>21</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1971</td>
          <td>12749.385</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.029717</td>
          <td>2772.708160</td>
          <td>217.477797</td>
          <td>233.174215</td>
          <td>...</td>
          <td>7.391439</td>
          <td>8.136900</td>
          <td>16.542793</td>
          <td>1107.678841</td>
          <td>2638.926007</td>
          <td>2690.518366</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>864.055243</td>
        </tr>
        <tr>
          <th>22</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1972</td>
          <td>13079.460</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.028351</td>
          <td>2532.448551</td>
          <td>193.620268</td>
          <td>203.815514</td>
          <td>...</td>
          <td>7.894959</td>
          <td>7.223611</td>
          <td>17.784399</td>
          <td>945.298951</td>
          <td>2254.372064</td>
          <td>2287.650884</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>737.915549</td>
        </tr>
        <tr>
          <th>23</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1973</td>
          <td>13421.301</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.026877</td>
          <td>2901.972071</td>
          <td>216.221369</td>
          <td>225.405444</td>
          <td>...</td>
          <td>7.451048</td>
          <td>6.500619</td>
          <td>18.505092</td>
          <td>999.400460</td>
          <td>2385.834304</td>
          <td>2424.683471</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>779.620585</td>
        </tr>
        <tr>
          <th>24</th>
          <td>Afghanistan</td>
          <td>AFG</td>
          <td>1974</td>
          <td>13772.076</td>
          <td>4.499843e-02</td>
          <td>Afghani</td>
          <td>0.028327</td>
          <td>3424.228187</td>
          <td>248.635586</td>
          <td>257.753750</td>
          <td>...</td>
          <td>7.098609</td>
          <td>7.785019</td>
          <td>24.503937</td>
          <td>1025.208685</td>
          <td>2449.957675</td>
          <td>2497.585718</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>812.015225</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>11395</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2005</td>
          <td>11639.470</td>
          <td>2.236364e+01</td>
          <td>Zimbabwe Dollar</td>
          <td>39.482829</td>
          <td>1968.205961</td>
          <td>169.097559</td>
          <td>184.183929</td>
          <td>...</td>
          <td>6.995770</td>
          <td>9.376272</td>
          <td>89.399427</td>
          <td>214.739197</td>
          <td>418.970867</td>
          <td>418.970867</td>
          <td>NaN</td>
          <td>390.907086</td>
          <td>NaN</td>
          <td>169.097559</td>
        </tr>
        <tr>
          <th>11396</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2006</td>
          <td>11544.326</td>
          <td>1.643606e+02</td>
          <td>Zimbabwe Dollar</td>
          <td>384.899651</td>
          <td>2132.305773</td>
          <td>184.705956</td>
          <td>192.953943</td>
          <td>...</td>
          <td>7.648020</td>
          <td>14.986823</td>
          <td>81.697014</td>
          <td>217.543648</td>
          <td>424.754259</td>
          <td>407.262097</td>
          <td>NaN</td>
          <td>377.352394</td>
          <td>NaN</td>
          <td>179.368685</td>
        </tr>
        <tr>
          <th>11397</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2007</td>
          <td>11443.187</td>
          <td>9.675781e+03</td>
          <td>Zimbabwe Dollar</td>
          <td>38583.323960</td>
          <td>2107.937100</td>
          <td>184.208918</td>
          <td>198.215361</td>
          <td>...</td>
          <td>8.387106</td>
          <td>15.787322</td>
          <td>84.483374</td>
          <td>202.707080</td>
          <td>396.486201</td>
          <td>376.163064</td>
          <td>NaN</td>
          <td>345.764991</td>
          <td>NaN</td>
          <td>173.113448</td>
        </tr>
        <tr>
          <th>11398</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2008</td>
          <td>11350.000</td>
          <td>6.715424e+09</td>
          <td>Zimbabwe Dollar</td>
          <td>38723.957740</td>
          <td>1772.209867</td>
          <td>156.141839</td>
          <td>162.112294</td>
          <td>...</td>
          <td>7.685312</td>
          <td>13.444449</td>
          <td>85.117130</td>
          <td>174.178806</td>
          <td>343.159758</td>
          <td>332.649861</td>
          <td>NaN</td>
          <td>302.945712</td>
          <td>NaN</td>
          <td>142.329054</td>
        </tr>
        <tr>
          <th>11399</th>
          <td>Zimbabwe</td>
          <td>ZWE</td>
          <td>2009</td>
          <td>11383.000</td>
          <td>1.400000e+17</td>
          <td>Zimbabwe Dollar</td>
          <td>40289.958990</td>
          <td>1906.049843</td>
          <td>167.447056</td>
          <td>174.419700</td>
          <td>...</td>
          <td>7.905525</td>
          <td>14.743667</td>
          <td>83.749534</td>
          <td>182.613004</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>314.171069</td>
          <td>NaN</td>
          <td>151.435285</td>
        </tr>
      </tbody>
    </table>
    <p>3827 rows × 37 columns</p>
    </div>


